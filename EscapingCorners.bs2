' Robotics with Boe-Bot - EscapingCorners.bs2
' Boe-Bot navigates out of corners by detecting alternating whisker presses.
' {$STAMP BS2}
' {$PBASIC 2.5}

DEBUG "Program Running!"

' VARIABLES ---------------------

pulseCount  VAR  Byte
counter     VAR  Nib
old7        VAR  Bit
old5        VAR  Bit

' INITIALIZATION ---------------

FREQOUT 4, 2000, 3000
counter = 1
old7 = 0
old5 = 1

' MAIN ROUTINE -----------------

DO

' --- Detect Consecutive Alternate Corners ---
' See the "How EscapingCorners.bs2 Works" section that follows this program.

  IF (IN7 <> IN5) THEN
    IF (old7 <> IN7) AND (old5 <> IN5) THEN
      counter = counter + 1
      old7 = IN7
      old5 = IN5
      IF (counter > 4) THEN
        counter = 1
        GOSUB back_up
        GOSUB turn_left
        GOSUB turn_left
      ENDIF
    ELSE
      counter = 1
    ENDIF
  ENDIF

  IF (IN5 = 0) AND (IN7 = 0) THEN
    GOSUB back_up
    GOSUB turn_left
    GOSUB turn_left
  ELSEIF (IN5 = 0) THEN
    GOSUB back_up
    GOSUB turn_right
  ELSEIF (IN7 = 0) THEN
    GOSUB back_up
    GOSUB turn_left
  ELSE
    LOW 10
    LOW 1
    GOSUB forward_pulse
  ENDIF
LOOP

' SUBROUTINES ------------------------------------------------------------

forward_pulse:
  PULSOUT 13, 825
  PULSOUT 12, 650
  PAUSE 20
  RETURN

turn_left:
  FOR pulseCount = 0 TO 20
    PULSOUT 13, 650
    PULSOUT 12, 650
    PAUSE 20
  NEXT
  RETURN

turn_right:
  FOR pulseCount = 0 TO 20
    PULSOUT 13, 850
    PULSOUT 12, 850
    PAUSE 20
  NEXT
  RETURN

back_up:
  FOR pulseCount = 0 TO 40
    PULSOUT 13, 675
    PULSOUT 12, 850
    PAUSE 20
  NEXT
  RETURN